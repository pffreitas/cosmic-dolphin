name: Deploy to DigitalOcean App Platform

on:
  push:
    branches: [main]
    paths:
      - "packages/**"
      - "package.json"
      - ".github/workflows/deploy-nodejs.yml"
  workflow_dispatch:

env:
  BUN_VERSION: "1.2"
  REGISTRY_NAME: ${{ secrets.DIGITALOCEAN_REGISTRY_NAME }}
  IMAGE_NAME_API: cosmic-dolphin-api
  IMAGE_NAME_WORKER: cosmic-dolphin-worker

jobs:
  supabase-migrations:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Run Supabase migrations
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          supabase link --project-ref ${{ vars.SUPABASE_PROJECT_REF }}
          supabase db push

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build shared package
        run: bun run --cwd packages/shared build

      - name: Build API
        run: bun run --cwd packages/api build

      - name: Build Worker
        run: bun run --cwd packages/worker build

      - name: Run tests
        run: bun run test

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry
        run: doctl registry login

      - name: Build API Docker image
        run: |
          docker build -t $IMAGE_NAME_API -f packages/api/Dockerfile .

      - name: Tag API Docker image
        run: |
          docker tag $IMAGE_NAME_API registry.digitalocean.com/$REGISTRY_NAME/$IMAGE_NAME_API:$GITHUB_SHA
          docker tag $IMAGE_NAME_API registry.digitalocean.com/$REGISTRY_NAME/$IMAGE_NAME_API:latest

      - name: Push API Docker image
        run: |
          docker push registry.digitalocean.com/$REGISTRY_NAME/$IMAGE_NAME_API:$GITHUB_SHA
          docker push registry.digitalocean.com/$REGISTRY_NAME/$IMAGE_NAME_API:latest

      - name: Build Worker Docker image
        run: |
          docker build -t $IMAGE_NAME_WORKER -f packages/worker/Dockerfile .

      - name: Tag Worker Docker image
        run: |
          docker tag $IMAGE_NAME_WORKER registry.digitalocean.com/$REGISTRY_NAME/$IMAGE_NAME_WORKER:$GITHUB_SHA
          docker tag $IMAGE_NAME_WORKER registry.digitalocean.com/$REGISTRY_NAME/$IMAGE_NAME_WORKER:latest

      - name: Push Worker Docker image
        run: |
          docker push registry.digitalocean.com/$REGISTRY_NAME/$IMAGE_NAME_WORKER:$GITHUB_SHA
          docker push registry.digitalocean.com/$REGISTRY_NAME/$IMAGE_NAME_WORKER:latest

      - name: Deploy API to DigitalOcean App Platform
        uses: digitalocean/app_action/deploy@v2
        env:
          IMAGE_TAG: ${{ github.sha }}
          SUPABASE_URL: ${{ vars.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          app_spec_location: .do/nodejs-api-app.yml

      - name: Deploy Worker to DigitalOcean App Platform
        uses: digitalocean/app_action/deploy@v2
        env:
          IMAGE_TAG: ${{ github.sha }}
          SUPABASE_URL: ${{ vars.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          app_spec_location: .do/nodejs-worker-app.yml
